
# Workaround for Issue #8
mod M

  trait Eq { X : Type }
    val == ( X X -- Bool )
  end

  mod IntIsEq
    require Eq { Int }
    fun == ( Int Int -- Bool )
      Prelude.=
    end
  end

  record Tuple2 { A : Type , B : Type }
    constructor make
    field proj1 A
    field proj2 B
  end

  # TODO I'd like to be able to say this.
  #mod Tuple2IsEq { A : Type , B : Type , AIsEq : Eq { A } , BIsEq : Eq { B } }
  #end

end

# TODO Currently this has to be loaded in a separate module, due to the way
# module asserts are handled. Fix this.
mod N
  mod MyTuple2 = M.Tuple2 { Int , String } end
end

fun main ( -- N.MyTuple2 )
  10 "A" N.MyTuple2.make
end
