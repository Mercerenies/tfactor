
trait ActsOn
  type t
  fun perform ( Self.t -- Self.t )
end

mod AddOne
  require ActsOn
  mod t = Int end
  fun perform ( Int -- Int )
    1 +
  end
end

# TODO This actually can't be done either because we can't do module synonyms in a functor
#mod DoTwice { F : ActsOn }
#  require ActsOnInt # TODO Can't express this right now since it's inside a functor.
#  mod t = F.t end
#  fun perform ( F.t -- F.t )
#    F.perform F.perform
#  end
#end

#mod AddTwo = DoTwice { AddOne } end

fun test ( -- Bool )
  10 AddOne.perform 11 =
end
