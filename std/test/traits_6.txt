
trait HasType
  type t
end

trait A
  mod B { T1 : HasType }
    mod C { T2 : HasType }
      val do-swap ( T1.t T2.t -- T2.t T1.t )
    end
  end
end

mod AA
  require A
  mod B { S1 : HasType }
    mod C { T1 : HasType }
      fun do-swap ( S1.t T1.t -- T1.t S1.t )
        Prelude.swap
      end
    end
  end
end

# Issue #8
mod L
  mod HasInt mod t = Int end end
end

mod M
  mod MB = AA.B { L.HasInt } end
end

mod N
  mod NC = M.MB.C { L.HasInt } end
end

fun test ( -- Bool )
  100 200 N.NC.do-swap 100 = swap 200 = and
end
